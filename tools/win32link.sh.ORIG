#! /bin/sh
#
# RCS: $Id: win32link.sh.ORIG,v 1.1 2002/10/25 19:52:05 mohsen Exp $
#
# Syntax:
# Description:
#
#set -x 
#echo ${CURENVBASE}
#echo ${OSMTROOT}

if [[ "${BASH_VERSION}X" != "X" ]] ; then
 . ${OSMTROOT}/lib/printBash.sh
fi

. $CURENVBASE/tools/pdt-current.sh

badUsage=
traceLevel=

targetCPU=""    # MANDATORY
targetOS=""     # MANDATORY
programType="CONSOLE"  # GUI, DLL, OLE

while getopts t:s:o:c:T:u? c
do
    case $c in
    o)
	targetFile=$OPTARG
	;;
    c)
	targetCPU=$OPTARG
	;;
    s)
	targetOS=$OPTARG
	;;
    t)
	programType=$OPTARG
	;;
    T)
	case $OPTARG in
	*[!0-9]* )
	    echo "$0: -T requires a numeric option"
 	    badUsage=TRUE
	    ;;
        [0-9]* )
	    traceLevel=$OPTARG
	    ;;
	esac
	;;
     u | \?)
	badUsage=TRUE
	;;
    esac
done

if [ ${badUsage} ]
then
    usage
    exit 1
fi

if [ "${targetCPU}" = "" ] ; then
  echo "EH_OOPS"
  usage
  exit 1
fi

if [ "${targetOS}" = "" ] ; then
  echo "EH_OOPS"
  usage
  exit 1
fi

if [ ${traceLevel} ]
then
    echo "Trace Level set to: ${traceLevel}"
    # Make Shell be Verbose
    set -v
fi

shift `expr $OPTIND - 1`

#baseFileName=`basename $1`

#shift


print -r -- targetFile = ${targetFile}

case ${targetCPU} in
'SH3')   
  resultsCPU=sh3
  machineCPU=SH3
  wceLibCPU=wcesh
  ;;
'MIPS' )
  resultsCPU=mips
  machineCPU=MIPS
  wceLibCPU=wcemips
  ;;
'i386' )
  resultsCPU=x86
  machineCPU=I386
  ;;
'EMULATOR' )
  resultsCPU=x86
  machineCPU=x86
  ;;
* )
  echo "EH_problem - $0: (1) invalid Target CPU: ${targetCPU}"
  exit 1
  ;;
esac

echo "Linking for OS=${targetOS} CPU=${targetCPU} programType=${programType}"

# NOTYET
#targetPDT=VORDE
#targetPDT=OCPDEVL.MUL

case ${targetOS} in
'WINNT' )
  resultsOS=winnt

  typeset osType=`uname -s`
  case $osType in 
    'Windows_NT')
       typeset CURENVBASE_winVersion=${CURENVBASE}
       typeset DEVSTUDIOPATH_winVersion=$DEVSTUDIOPATH
       ;;
    'UWIN-NT')
      typeset CURENVBASE_winVersion=`winpath ${CURENVBASE} | sed -e 's:\\\\:\\\\:g'`
      typeset DEVSTUDIOPATH_winVersion=`winpath $DEVSTUDIOPATH | sed -e 's:\\\\:\\\\:g'`
      typeset DialogicBase_winVersion=`winpath ${DialogicBase} | sed -e 's:\\\\:\\\\:g'`
      ;;
    'CYGWIN_NT-5.0')
      typeset CURENVBASE_winVersion=`cygpath -w ${CURENVBASE} | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset DEVSTUDIOPATH_winVersion=`cygpath -w ${DEVSTUDIOPATH} | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset DialogicBase_winVersion=`cygpath -w ${DialogicBase} | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset WINCEROOT_winVersion=`cygpath -m  $WINCEROOT | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset SDKROOT_winVersion=`cygpath -m  $SDKROOT | sed -e 's:\\\\:\\\\\\\\:g'`
      ;;
  esac

  libPath="-libpath:${CURENVBASE_winVersion}\\\\results\\\\${resultsOS}\\\\${resultsCPU}\\\\libc"

  case ${targetPDT} in
     'VORDE' )
       libPath="${libPath} -libpath:${DialogicBase_winVersion}\\\\lib"
      ;;
    'esrosSDK' | 'OCPDEVL.MUL')
      libpath="${libPath} -libpath:${CURENVBASE_winVersion}\\\\libc"
      ;;
     * )
      echo "$0: Target PDT: ${targetPDT} Ignored"
      ;;
  esac


  # NOTYET -- These should not be hardcoded like this

  libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\VC98\\\\Lib"
  libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\VC98\\\\MFC\\\\Lib"

  case ${programType} in
    'CONSOLE')   
      libList="libc.lib oldnames.lib kernel32.lib  ws2_32.lib mswsock.lib"
      libList="${libList}  advapi32.lib"
      
      LINK32_FLAGS="-debug:full -debugtype:cv -NODEFAULTLIB -incremental:yes\
       -subsystem:console,4.0"
      ;;

    'GUI')   
      libList="libc.lib oldnames.lib kernel32.lib  ws2_32.lib mswsock.lib"
      libList="${libList}  advapi32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib"
      
      LINK32_FLAGS="-debug:full -debugtype:cv -NODEFAULTLIB -incremental:yes\
       -subsystem:windows,4.0"
      ;;

    'DLL')   
      libList="libc.lib oldnames.lib kernel32.lib  ws2_32.lib mswsock.lib"
      libList="${libList}  advapi32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib"
      
      LINK32_FLAGS="-debug:full -debugtype:cv -NODEFAULTLIB -incremental:yes\
       -subsystem:windows,4.0"
      ;;

    * )
	echo "EH_PROBLEM"
	exit 1
	;;
  esac
  ;;
'WIN95' )
  resultsOS=winnt

  echo EH_problem not yet
  ;;
'WINCE' )
  resultsOS=wce

  case ${programType} in
    'CONSOLE' | 'GUI' )
      libPath="-libpath:${CURENVBASE_winVersion}\\\\results\\\\${resultsOS}\\\\${resultsCPU}\\\\libc"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\wce\\\\lib\\\\wce101\\\\${wceLibCPU}"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc98\\\\lib"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc98\\\\mfc\\\\lib"

      libList="commctrl.lib coredll.lib libcd.lib"
      sysLibList="winsock.lib"

      LINK32_FLAGS="-entry:\"WinMainCRTStartup\"\
       -base:\"0x00010000\" -align:\"4096\" -incremental:yes\
       -debug -machine:${machineCPU}\
       -subsystem:windowsce"
      ;;
    'DLL' )
      libPath="-libpath:${CURENVBASE_winVersion}\\\\results\\\\${resultsOS}\\\\${resultsCPU}\\\\libc"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\wce\\\\lib\\\\wce101\\\\${wceLibCPU}"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc\\\\lib"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc\\\\mfc\\\\lib"

      libList="commctrl.lib coredll.lib libcd.lib msgstore.lib"
      sysLibList="winsock.lib"

      LINK32_FLAGS="-entry:\"_DllMainCRTStartup\"\
       -base:\"0x00010000\" -align:\"4096\" -dll -incremental:yes\
       -debug -machine:${machineCPU}\
       -subsystem:windowsce"
      ;;
    * )
      echo "$0: (2) invalid Target CPU: ${targetCPU}"
      exit 1
      ;;
  esac
  ;;
'WCE3' )
  resultsOS=ppc3
      typeset CURENVBASE_winVersion=`cygpath -m ${CURENVBASE} | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset DEVSTUDIOPATH_winVersion=`cygpath -m ${DEVSTUDIOPATH} | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset DialogicBase_winVersion=`cygpath -m ${DialogicBase} | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset WINCEROOT_winVersion=`cygpath -m  $WINCEROOT | sed -e 's:\\\\:\\\\\\\\:g'`
      typeset SDKROOT_winVersion=`cygpath -m  $SDKROOT | sed -e 's:\\\\:\\\\\\\\:g'`

  case ${programType} in
    'CONSOLE' | 'GUI' )
      libPath="-libpath:${CURENVBASE_winVersion}\\\\results\\\\${resultsOS}\\\\${resultsCPU}\\\\libc"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\wce\\\\lib\\\\wce101\\\\${wceLibCPU}"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc98\\\\lib"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc98\\\\mfc\\\\lib"
      libPath="${libPath} -libpath:${SDKROOT_winVersion}\\\\${OSVERSION}\\\\${PLATFORM}\\\\lib\\\\x86em"
      libPath="${libPath} -libpath:${SDKROOT_winVersion}\\\\${OSVERSION}\\\\${PLATFORM}\\\\MFC\\\\lib\\\\x86em"
      libPath="${libPath} -libpath:${SDKROOT_winVersion}\\\\${OSVERSION}\\\\${PLATFORM}\\\\ATL\\\\lib\\\\x86em"


      libList="corelibc.lib coredll.lib aygshell.lib"

      LINK32_FLAGS="-nologo -entry:\"WinMainCRTStartup\"\
       -base:\"0x00010000\" -align:\"4096\" -incremental:yes\
       -debug -machine:${machineCPU}\
       -subsystem:windows"
      ;;
    'DLL' )
      libPath="-libpath:${CURENVBASE_winVersion}\\\\results\\\\${resultsOS}\\\\${resultsCPU}\\\\libc"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\wce\\\\lib\\\\wce101\\\\${wceLibCPU}"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc\\\\lib"
      libPath="${libPath} -libpath:${DEVSTUDIOPATH_winVersion}\\\\vc\\\\mfc\\\\lib"

      libList="commctrl.lib coredll.lib libcd.lib msgstore.lib"
      sysLibList="winsock.lib"

      LINK32_FLAGS="-entry:\"_DllMainCRTStartup\"\
       -base:\"0x00010000\" -align:\"4096\" -dll -incremental:yes\
       -debug -machine:${machineCPU}\
       -subsystem:windowsce"
      ;;
    * )
      echo "$0: (2) invalid Target CPU: ${targetCPU}"
      exit 1
      ;;
  esac
  ;;
'WINCE-EMULATION' )
  resultsOS=wce

  ;;
* )
  echo "$0: (3) invalid Target CPU: ${targetCPU}"
  exit 1
  ;;
esac

echo TARGETPDT=${targetPDT}


  case ${targetPDT} in
     'VORDE' )
       # d:/Dialogic3.1/lib  -- NOTYET
       #libList="${libList} kernel32.lib user32.lib gdi32.lib winspool.lib uuid.lib libdtimt.lib libdxxmt.lib libsrlmt.lib sctools.lib libfaxmt.lib"
       libList="${libList} kernel32.lib user32.lib gdi32.lib winspool.lib uuid.lib"
       #libList="${libList} kernel32.lib user32.lib gdi32.lib winspool.lib uuid.lib"
      ;;
     'OCPDEVL.MUL' | 'esrosSDK' )

      libList="${libList} kernel32.lib user32.lib gdi32.lib winspool.lib uuid.lib \
       kernel32.lib user32.lib gdi32.lib winspool.lib uuid.lib"

       #libList="${libList} kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib ${LibList} kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib"
       ;;
     * )
      echo "$0: Target PDT: ${targetPDT} Ignored"
      ;;
  esac



for d in $* 
do
	#echo "$d";
	baseFileName=`basename $d`
	prefixFileName=${baseFileName%%\.*}
	suffixFileName=${baseFileName##*\.}

	case ${suffixFileName} in
	'o')
	    objList="${objList} ${baseFileName}"
	    ;;
	'obj')
	    objList="${objList} ${baseFileName}"
	    ;;
	'rsc')
	    objList="${objList} ${baseFileName}"
	    ;;
	'lib')
    	    libList="${libList} ${baseFileName}"
	    ;;
	'a')
	    # Convert Connonical .a libraries to .lib
    	    libList="${libList} ${prefixFileName}.lib"
	    ;;
	*)
	    echo ignoring ${baseFileName}
	    ;;
	esac
done

LINK32="link.exe"

#NOLOGO="-nologo"
NOLOGO=""


#-out:`basename ${targetFile} .exe`.exe

case ${programType} in
  'CONSOLE' | 'GUI' )
    cat > $$.rsp << __EOF__
${NOLOGO}
${LINK32_FLAGS}
-pdb:`basename ${targetFile} .exe`.pdb
-out:${targetFile}.exe
${libPath}
${objList}
${libList}
${sysLibList}
__EOF__
    ;;

  'DLL' )
    cat > $$.rsp << __EOF__
${NOLOGO}
${LINK32_FLAGS}
-pdb:`basename ${targetFile} .dll`.pdb
-def:`basename ${targetFile} .dll`.def
-implib:`basename ${targetFile} .dll`.lib
-out:${targetFile}
${libPath}
${libList}
${objList}
${sysLibList}
__EOF__
    ;;
  * )
    echo "$0: (4) invalid Target CPU: ${targetCPU}"
    exit 1
    ;;
esac



${LINK32} @$$.rsp

# NOTYET -- We need to test for exit status here

rm -- $$.rsp
